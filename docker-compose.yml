version: '3.6'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: sonarsoftware/customerportal:stable
    container_name: sonar-customerportal
    restart: always
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./public/assets/img/logo.png:/var/www/html/public/assets/img/logo.png
      - ./public/assets/img/cover.png:/var/www/html/public/assets/img/cover.png
      - storage:/var/www/html/storage
      - ./public/robots.txt:/var/www/html/public/robots.txt
      - ./public/assets/js/gtm.js:/var/www/html/public/assets/js/gtm.js
      - ./public/assets/js/crisp.js:/var/www/html/public/assets/js/crisp.js
      - ./resources/views/layouts/partials/head.blade.php:/var/www/html/resources/views/layouts/partials/head.blade.php
      - ./resources/views/layouts/full.blade.php:/var/www/html/resources/views/layouts/full.blade.php
      - ./resources/views/layouts/no-nav.blade.php:/var/www/html/resources/views/layouts/no-nav.blade.php
    env_file:
     - .env
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis

  redis:
    image: redis:7.0.11-alpine
    restart: always

  certbot:
    image: certbot/certbot
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  watchtower:
    image: v2tec/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: sonar-customerportal

volumes:
  storage:
    driver: local
